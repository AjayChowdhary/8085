.ORG 0000H
JMP MAIN

 003CH: JMP RST75
 0034H: JMP RST65
 002CH: JMP RST55


DELAY:  PUSH B;	SUBROUTINE FOR SHORT DELAY of 1'point'8ms
LOOP2:  MVI C, 016H
		MVI B,0FEH; 
LOOP:	DCR B
		JNZ LOOP
		DCR C
		JNZ LOOP2;
		RET	


DELAYNSEC:  MVI A,D
			PUSH B; SUBROUTINE FOR DELAY OF 1sec
			LOOP3: MVI B, 096H
			LOOP4: MVI C, 0FAH
			LOOP5: NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			NOP
			DCR C
			JNZ LOOP5
			DCR B
			JNZ LOOP4
			DCR A
			JNZ LOOP3
			RET

 
MAIN:	LXI SP ,0000H; INITIALIZING THE STACK POINTER
	PUSH PSW;SAVING ACCUMALATOR CONTENTS TO FFFFH
	MVI A, 040H; CONTROL WORD FOR 0 O/P ON SOD
	SIM
	MVI A,092H; CONTROL WORD FOR 8255 - P A&B=IP P C=OP
	OUT 03H; CONTROL REGISTER ADDRESS =03H
	CALL LCD_INIT
	CALL DELAY
	CALL DATA1
	CALL DELAY1
	CALL DELAY1
	CALL DELAY1
	CALL DATA2
	CALL DELAY

	MVI E, 001H; SETTING 8085 TO TEMP MODE INITIALLY

	CHANGE: MOV A,E
			 ORI 0FFH;  SETTING ZERO FLAG IF E IS ZERO
			 JNZ TEMP
			 JMP HEART


	POP PSW
	HLT

LCD_INIT:MVI D, 033H; SENDING INITIALISATION COMMAND
	CALL COMMAND
	MVI D,032H; SENDING INITIALISATION COMMAND
	CALL COMMAND
	MVI D,028H; SENDING COMMAND TO INITIALIZE 4 BIT
	CALL COMMAND
	MVI D,006H; SENDING COMMAND TO INITIALIZE CURSOR
	CALL COMMAND
	MVI D,00FH; SEND COMMAND TO DISPLAY ON CURSOR BLINK
	CALL COMMAND
	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND
	MVI D,080H; COMMAND TO FORCE CURSOR FROM 1st LINE
	CALL COMMAND
	CALL DELAY
	CALL DELAY

	RET

DATA1: MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA	
	MVI D,048H; SENDING DATA "H"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,06CH; SENDING DATA "l"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,068H; SENDING DATA "h"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,04BH; SENDING DATA "K"
	CALL DATA
	MVI D,069H; SENDING DATA "i"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,0C0H; COMMAND TO FORCE CURSOR FROM 2nd LINE
	CALL COMMAND
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,042H; SENDING DATA "B"
	CALL DATA
	MVI D,079H; SENDING DATA "y"
	CALL DATA
	CALL DELAY


	RET

DATA2:	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND
	MVI D,080H; COMMAND TO FORCE CURSOR FROM 1st LINE
	CALL COMMAND
	CALL DELAY
	CALL DELAY

	MVI D,041H; SENDING DATA "A"
	CALL DATA
	MVI D,064H; SENDING DATA "d"
	CALL DATA
	MVI D,068H; SENDING DATA "h"
	CALL DATA
	MVI D,069H; SENDING DATA "i"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,06AH; SENDING DATA "j"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,043H; SENDING DATA "C"
	CALL DATA
	MVI D,068H; SENDING DATA "h"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,06EH; SENDING DATA "n"
	CALL DATA
	MVI D,064H; SENDING DATA "d"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,06CH; SENDING DATA "l"
	CALL DATA

	MVI D,0C0H; COMMAND TO FORCE CURSOR FROM 2nd LINE
	CALL COMMAND
	MVI D,031H; SENDING DATA "1"
	CALL DATA
	MVI D,032H; SENDING DATA "2"
	CALL DATA
	MVI D,045H; SENDING DATA "E"
	CALL DATA
	MVI D,043H; SENDING DATA "C"
	CALL DATA
	MVI D,031H; SENDING DATA "1"
	CALL DATA
	MVI D,034H; SENDING DATA "4"
	CALL DATA

	CALL DELAY1
	CALL DELAY1
	CALL DELAY1
	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND
	MVI D,080H; COMMAND TO FORCE CURSOR FROM 1st LINE
	CALL COMMAND
	CALL DELAY
	CALL DELAY


	MVI D,041H; SENDING DATA "A"
	CALL DATA
	MVI D,06AH; SENDING DATA "j"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,079H; SENDING DATA "y"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,043H; SENDING DATA "C"
	CALL DATA
	MVI D,068H; SENDING DATA "h"
	CALL DATA
	MVI D,06FH; SENDING DATA "o"
	CALL DATA
	MVI D,075H; SENDING DATA "u"
	CALL DATA
	MVI D,064H; SENDING DATA "d"
	CALL DATA
	MVI D,061H; SENDING DATA "h"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D,079H; SENDING DATA "y"
	CALL DATA

	

	MVI D,0C0H; COMMAND TO FORCE CURSOR FROM 2nd LINE
	CALL COMMAND
	MVI D,031H; SENDING DATA "1"
	CALL DATA
	MVI D,035H; SENDING DATA "5"
	CALL DATA
	MVI D,045H; SENDING DATA "E"
	CALL DATA
	MVI D,043H; SENDING DATA "C"
	CALL DATA
	MVI D,031H; SENDING DATA "1"
	CALL DATA
	MVI D,034H; SENDING DATA "4"
	CALL DATA	
	CALL DELAY1
	CALL DELAY1
	CALL DELAY1
	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND

	CALL DELAY
	CALL DELAY

	RET


COMMAND:MOV A,D
	ANI 0F0H;MASKING UPPER 4 BITS AND RS=0 FOR COMMAND
	OUT 02H; PORT C ADDRESS OF 8255
	CALL DELAY
	ORI 02H; ENABLE HIGH AND RS LOW
	CALL DELAY
	OUT 02H
	CALL DELAY
	ANI 0F0H
	OUT 02H
	CALL DELAY
	MOV A,D
	RLC; SHIFTING THE 4 BITS
	RLC
	RLC
	RLC
	ANI 0F0H; MASKING LOWER 4 BITS
	OUT 02H
	CALL DELAY
	ORI 02H; ENABLE HIGH
	CALL DELAY
	OUT 02H
	CALL DELAY
	ANI 0F0H
	OUT 02H
	CALL DELAY
	RET


DATA: 	MOV A,D
	ANI 0F1H; MAKING RS=1 FOR DATA REGISTER
	OUT 02H; PORT C ADDRESS OF 8255
	CALL DELAY
	ORI 03H; ENABLE HIGH AND RS HIGH
	CALL DELAY
	OUT 02H
	CALL DELAY
	ANI 0F1H
	OUT 02H
	CALL DELAY
	MOV A,D
	RLC; SHIFTING THE 4 BITS
	RLC
	RLC
	RLC
	ANI 0F1H
	OUT 02H
	CALL DELAY
	ORI 03H; ENABLE HIGH
	CALL DELAY
	OUT 02H
	CALL DELAY
	ANI 0F1H
	OUT 02H
	CALL DELAY
	RET

DELAY1:	LXI H, 0FFFFH
LOOP1:	DCX H
	MOV A,L
	ORA H
	JNZ LOOP1 
	RET

RST75: MOV A,E
	   CMA
	   MOV E,A
	   JMP CHANGE

RST65: DI
	   PUSH PSW
	   PUSH H
	   MVI A, 0C0H
	   SIM;  OUTPUTTING 1 ON SOD TO CLEAR D F/F

	   LDX H, 0A000H
	   MOV A,M; LOADING CURRENT PULSE COUNT
	   INR A
	   STA
	   MVI A, 040H
	   SIM; ENABLING D F/F AGAIN
	   EI
	   RET


HEXTOBCD: PUSH PSW
		PUSH D
		LXI H,0A000H        ;Initialize memory pointer 
         MVI D,00          ;Clear D for Most significant Byte 
         XRA A             ;Clear Accumulator 
         MOV C,M           ;Get HEX data 
LOOP2: ADI 01              ;Count the number one by one 
         DAA               ;Adjust for BCD count 
         JNC LOOP1 
         INR D 
LOOP1: DCR C 
         JNZ LOOP2 
         STA 0A001H          ;Store the Least Significant Byte 
         MOV A,D 
         STA 0A005H          ;Store the Most Significant Byte 
         RET

HEXTOASCII:  LDA        ; Address already stored in HL
        MOV B,A 
        ANI 0F           ;Mask Upper Nibble 
        CALL SUB1        ;Get ASCII code for upper nibble 
        MOV D,A 
        MOV A,B 
        ANI F0           ;Mask Lower Nibble 
        RLC 
        RLC 
        RLC 
        RLC 
        CALL SUB1        ;Get ASCII code for lower nibble 
        MOV C,A
        RET              ;Return from subroutine

SUB1:   CPI 0A
        JC SKIP 
        ADI 07 
SKIP:   ADI 30
        RET              ;Return Subroutine




HEART: DI
	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND
	MVI D,080H; COMMAND TO FORCE CURSOR FROM 1st LINE
	CALL COMMAND
	CALL DELAY
	CALL DELAY

	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,048H; SENDING DATA "H"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,052H; SENDING DATA "R"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA

	MVI D,0C0H; COMMAND TO FORCE CURSOR FROM 2nd LINE
	CALL COMMAND
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,04DH; SENDING DATA "M"
	CALL DATA
	MVI D,06FH; SENDING DATA "o"
	CALL DATA
	MVI D,06EH; SENDING DATA "n"
	CALL DATA
	MVI D,069H; SENDING DATA "i"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,06FH; SENDING DATA "o"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D, 005H
	JMP DELAYNSEC;  5sec DELAY TO ALLOW SENSOR TO STABILISE

	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND
	MVI D,080H; COMMAND TO FORCE CURSOR FROM 1st LINE
	CALL COMMAND
	CALL DELAY
	CALL DELAY


	MVI D,050H; SENDING DATA "P"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,073H; SENDING DATA "s"
	CALL DATA
	MVI D,073H; SENDING DATA "s"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,046H; SENDING DATA "F"
	CALL DATA
	MVI D,069H; SENDING DATA "i"
	CALL DATA
	MVI D,06EH; SENDING DATA "n"
	CALL DATA
	MVI D,067H; SENDING DATA "g"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,06FH; SENDING DATA "o"
	CALL DATA
	MVI D,06EH; SENDING DATA "n"
	CALL DATA

	MVI D,0C0H; COMMAND TO FORCE CURSOR FROM 2nd LINE
	CALL COMMAND
	MVI D,050H; SENDING DATA "P"
	CALL DATA
	MVI D,075H; SENDING DATA "u"
	CALL DATA
	MVI D,06CH; SENDING DATA "l"
	CALL DATA
	MVI D,073H; SENDING DATA "s"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,053H; SENDING DATA "S"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,06EH; SENDING DATA "n"
	CALL DATA
	MVI D,073H; SENDING DATA "s"
	CALL DATA
	MVI D,06FH; SENDING DATA "o"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	
	MEASURE: MVI A,0C0H
	SIM ; MAKING D F/F FUNCTIONAL
	XRA A
	LDX H, 0A000H; ADDRESS WHERE PULSE COUNT IS STORED
	STA ; SETTING PULSE COUNT TO 0 INITIALLY
	EI
	MVI D, 00FH ; CALLING DELAY OF 15 SEC
	DELAYNSEC ; IN WHICH PULSES ARE COUNTED
	DI ; STOP COUNTING PULSES
	MVI A,040H ; MAKE D F/F NON FUNCTIONAL

	MOV A,M ; LOAD A WITH PULSE COUNT
	RLC ; MULTIPLY BY 4 TO GET BEATS/MIN
	RLC
	STA 
	HEXTOBCD ; LSB-A001H, MSB-A005H
	
	LXI H,0A001H ; LOAD HL WITH ADDRESS OF LSB OF HEART RATE
	HEXTOASCII ; LSB - C, MSB - D
	MOV A,C
	STA A002H ; STORING LSB 
	MOV A,D
	STA A003H ; STORING MSB

	LXI H,0A005H ; LOAD HL WITH ADDRESS OF MSB OF HEART RATE
	HEXTOASCII ; LSB - C, MSB - D
	MOV A,C
	STA A006H ; STORING LSB 
	MOV A,D
	STA A007H ; STORING MSB - this will always be 0

	MVI D,001H; SENDING COMMAND TO CLEAR DISPLAY
	CALL COMMAND
	MVI D,080H; COMMAND TO FORCE CURSOR FROM 1st LINE
	CALL COMMAND
	CALL DELAY
	CALL DELAY


	MVI D,048H; SENDING DATA "H"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,072H; SENDING DATA "r"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,052H; SENDING DATA "R"
	CALL DATA
	MVI D,061H; SENDING DATA "a"
	CALL DATA
	MVI D,074H; SENDING DATA "t"
	CALL DATA
	MVI D,065H; SENDING DATA "e"
	CALL DATA
	MVI D,03EH; SENDING DATA "colon"

	MVI D,0C0H; COMMAND TO FORCE CURSOR FROM 2nd LINE
	CALL COMMAND

	LDA 0A006H ; LSB OF MSB OF HEART RATE (MSB IS ALWAYS 0)
	MOV D,A
	CALL DATA
	LDA 0A003H ; MSB OF LSB OF HEART RATE
	MOV D,A
	CALL DATA
	LDA 0A002H ; LSB OF LSB OF HEART RATE
	MOV D,A
	CALL DATA

	MVI D,020H; SENDING DATA "SPACE"
	CALL DATA
	MVI D,042H; SENDING DATA "B"
	CALL DATA
	MVI D,050H; SENDING DATA "P"
	CALL DATA
	MVI D,04DH; SENDING DATA "M"
	CALL DATA
	MVI A,001H ; CALL 1 SEC DELAY
	DELAYNSEC
	JMP MEASURE ; MEASURE HEART RATE AGAIN

	TEMP: NOP
		  JMP TEMP
	




